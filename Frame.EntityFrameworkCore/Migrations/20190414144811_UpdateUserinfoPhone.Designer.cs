// <auto-generated />
using System;
using Frame.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Frame.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(FrameDbContext))]
    [Migration("20190414144811_UpdateUserinfoPhone")]
    partial class UpdateUserinfoPhone
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Frame.Core.Entitys.Account", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<int>("AccountState");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("CreateUser");

                    b.Property<DateTime?>("DelTime");

                    b.Property<string>("DelUser");

                    b.Property<string>("OldPassWord");

                    b.Property<string>("PassWord")
                        .IsRequired();

                    b.Property<int>("SortDel");

                    b.Property<DateTime?>("UpdateTime");

                    b.Property<string>("UpdateUser");

                    b.Property<Guid?>("UserInfoId");

                    b.HasKey("ID");

                    b.HasIndex("UserInfoId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Frame.Core.Entitys.UserInfo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<int?>("Age");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("CreateUser");

                    b.Property<DateTime?>("DelTime");

                    b.Property<string>("DelUser");

                    b.Property<string>("Email");

                    b.Property<string>("Phone");

                    b.Property<string>("Photo");

                    b.Property<int>("Sex");

                    b.Property<int>("SortDel");

                    b.Property<DateTime?>("UpdateTime");

                    b.Property<string>("UpdateUser");

                    b.Property<string>("UserName");

                    b.HasKey("ID");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("Frame.Core.Entitys.Account", b =>
                {
                    b.HasOne("Frame.Core.Entitys.UserInfo", "UserInfo")
                        .WithMany("Accounts")
                        .HasForeignKey("UserInfoId");
                });
#pragma warning restore 612, 618
        }
    }
}
