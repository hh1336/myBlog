@using Frame.Application.Dtos.ArticleManager
@model ArticleDto

<form class="layui-form" id="ArticleForm">
    <input type="hidden" name="ID" value="@Model.ID" />
    <div class="layui-form-item">
        <label class="layui-form-label">文章名称</label>
        <div class="layui-input-block">
            <input type="text" name="AcName" lay-verify="title" autocomplete="off" placeholder="请输入文章名称" class="layui-input" value="@Model.AcName">
        </div>
    </div>

    <div class="layui-form-item">
        <div class="layui-inline">
            <label class="layui-form-label">分类标签</label>
            <input type="hidden" class="classifyId" value="@Model.ClassifyId" />
            <div class="layui-input-inline">
                <select name="ClassifyId"></select>
            </div>
        </div>
    </div>

    <div class="layui-upload">
        <button type="button" class="layui-btn" id="imgfile">上传图片</button>
        <input type="hidden" name="imgurl" value="@Model.ImgUrl" />
        <div class="layui-upload-list">
            <img class="layui-upload-img" id="imgurl" src="@Model.ImgUrl">
        </div>
    </div>

    <div class="layui-form-item layui-form-text">
        <label class="layui-form-label">文章描述</label>
        <div class="layui-input-block">
            <textarea placeholder="请输入内容" class="layui-textarea" name="Introduce">@Model.Introduce</textarea>
        </div>
    </div>
    <label class="layui-form-label">文章内容：</label>
    <div id="Content">
        <textarea>@Model.Content</textarea>
    </div>

</form>

<script>
    var form, upload;
    function GetLabel() {
        var labelid = $(".classifyId").val();
        $.post("/Admin/ArticleManager/GetLabel").done(function (result) {
            var select = $("[name=ClassifyId]");
            for (var i = 0, length = result.length; i < length; i++) {
                var selected = ``;
                if (result[i].ID == labelid) {
                    selected = `selected`;
                }
                var optstr = `<option value="` + result[i].ID + `" ` + selected + `>` + result[i].Name + `</option>`;
                select.append(optstr);
            }
            layui.use(['form', 'upload'], function () {
                form = layui.form;
                upload = layui.upload;
                form.render();
                //普通图片上传
        var uploadInst = upload.render({
            elem: '#imgfile'
            , url: '/Admin/ArticleManager/Upload'
            , before: function (obj) {
                //预读本地文件示例，不支持ie8
                obj.preview(function (index, file, result) {
                    $('#imgurl').attr('src', result); //图片链接（base64）
                });
            }
            , done: function (res) {
                //如果上传失败
                if (res.code > 0) {
                    return layer.msg('上传失败');
                }
                //上传成功
                $("input[name=imgurl]:hidden").val(res.url);
            }
            , error: function () {
                //演示失败状态，并实现重传
                //var demoText = $('#demoText');
                //demoText.html('<span style="color: #FF5722;">上传失败</span> <a class="layui-btn layui-btn-xs demo-reload">重试</a>');
                //demoText.find('.demo-reload').on('click', function () {
                //    uploadInst.upload();
                //});
            }
        });
            });

        })
    }
    $(function () {
        GetLabel();
        var testEditor = editormd("Content", {
            placeholder: '左边编写，右边预览',  //默认显示的文字
            width: "100%",//宽
            height: 640,
            syncScrolling: "single",
            path: "/lib/editormd/lib/",//资源路径
            theme: "gray",//主题 gray dark
            emoji: true,//emoji表情
            /**上传图片相关配置如下*/
            imageUpload: true,
            imageFormats: ["jpg", "jpeg", "gif", "png", "bmp", "webp"],
            imageUploadURL: "/Admin/ArticleManager/Upload",//注意你后端的上传图片服务地址
            previewTheme: "gray",//预览主题
            editorTheme: "pastel-on-gray",//编辑主题
            toolbarIcons: function () {  //自定义工具栏
                return editormd.toolbarModes['full']; // full, simple, mini
            }
        });
        testEditor.getMarkdown();

        

    })
</script>